// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
@function color-yiq($color) {
    $r: red($color);
    $g: green($color);
    $b: blue($color);

    $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;

    @if ($color==$light) {
      @return #111;
    } @else {
      @return #fff;
    }
  }

  @mixin hover-focus {
    @if $enable-hover-media-query {
      &:focus {
        @content;
      }
      @include hover { @content; }
    } @else {
      &:focus,
      &:hover {
        @content;
      }
    }
  }

  @mixin transition($transition...) {
    @if $enable-transitions {
      @if length($transition) == 0 {
        transition: $transition-base;
      } @else {
        transition: $transition;
      }
    }
  }

  @mixin gradient-bg($color) {
    @if $enable-gradients {
      background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x;
    } @else {
      background-color: $color;
    }
  }

  @mixin border-radius($radius: $border-radius) {
    @if $enable-rounded {
      border-radius: $radius;
    }
  }

  @mixin box-shadow($shadow...) {
    @if $enable-shadows {
      box-shadow: $shadow;
    }
  }
  @mixin hover {
      &:hover { @content; }
  }

  @mixin circle-button($height, $padding, $font-size, $border-radius){
        padding: $padding;
        font-size: $font-size;
        border-radius: $border-radius;
        height: $height;
  }
  @mixin size($width,$height) {
    width: $width;
    height: $height;
  }

  @mixin square($size) {
    @include size($size, $size);
  }

@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
    color: color-yiq($background);
    @include gradient-bg($background);
    border-color: $border;
    @include box-shadow($btn-box-shadow);

    @include hover {
      color: color-yiq($hover-background);
      @include gradient-bg($hover-background);
      border-color: $hover-border;
    }


    // Disabled comes first so active can properly restyle
    &.disabled,
    &:disabled {
      background-color: $background;
      border-color: $border;
    }

    &:not([disabled]):not(.disabled):active,
    &:not([disabled]):not(.disabled).active,
    .show > &.dropdown-toggle {
      color: color-yiq($active-background);
      background-color: $active-background;
      @if $enable-gradients {
        background-image: none; // Remove the gradient for the pressed/active state
      }
      border-color: $active-border;

      // Avoid using mixin so we can pass custom focus shadow properly
    }
  }

  @mixin button-outline-variant($color, $color-hover: #fff) {
    color: $color;
    background-color: transparent;
    background-image: none;
    border-color: $color;

    @include hover {
      color: $color-hover;
      background-color: $color;
      border-color: $color;
    }


    &.disabled,
    &:disabled {
      color: $color;
      background-color: transparent;
    }

    &:not([disabled]):not(.disabled):active,
    &:not([disabled]):not(.disabled).active,
    .show > &.dropdown-toggle {
      color: $color-hover;
      background-color: $color;
      border-color: $color;

    }
  }

  // Button sizes
  @mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
    padding: $padding-y $padding-x;
    font-size: $font-size;
    line-height: $line-height;
    @include border-radius($border-radius);
  }

  //border
  // Single side border-radius

@mixin border-radius($radius: $border-radius) {
    @if $enable-rounded {
      border-radius: $radius;
    }
  }

  @mixin border-top-radius($radius) {
    @if $enable-rounded {
      border-top-left-radius: $radius;
      border-top-right-radius: $radius;
    }
  }

  @mixin border-right-radius($radius) {
    @if $enable-rounded {
      border-top-right-radius: $radius;
      border-bottom-right-radius: $radius;
    }
  }

  @mixin border-bottom-radius($radius) {
    @if $enable-rounded {
      border-bottom-right-radius: $radius;
      border-bottom-left-radius: $radius;
    }
  }

  @mixin border-left-radius($radius) {
    @if $enable-rounded {
      border-top-left-radius: $radius;
      border-bottom-left-radius: $radius;
    }
  }
